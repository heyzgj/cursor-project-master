name: Continuous Integration & Quality Gate

on:
  push:
    branches: [ "main", "develop" ]
    paths-ignore:   # don’t rebuild for docs-only commits
      - 'docs/**'
      - '**/*.md'
  pull_request:
  workflow_dispatch:

env:
  # surface common secrets here; 100-engine pauses if they’re missing
  SUPABASE_URL:    ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  VERCEL_TOKEN:      ${{ secrets.VERCEL_TOKEN }}

###############################################################################
#   1 ----- NODE / JS / TS
###############################################################################
jobs:

  node:
    name: Node (Lint » Test » Build » Audit)
    if: ${{ hashFiles('**/package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node-${{ runner.os }}-

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Unit & E2E Tests
        run: npm test --if-present

      - name: Build
        run: npm run build --if-present

      - name: Security Audit (high & critical)
        run: npm audit --production --audit-level=high || true

###############################################################################
#   2 ----- PYTHON
###############################################################################
  python:
    name: Python (Lint » Test)
    if: ${{ hashFiles('pyproject.toml', 'requirements*.txt') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install .; fi

      - name: Lint
        run: |
          pip install flake8
          flake8 .

      - name: Tests
        run: |
          pip install pytest pytest-cov
          pytest --cov --cov-report=xml --cov-report=term

###############################################################################
#   3 ----- GO
###############################################################################
  go:
    name: Go (Test)
    if: ${{ hashFiles('**/go.mod') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Test
        run: go test ./...

###############################################################################
#   4 ----- RUST
###############################################################################
  rust:
    name: Rust (Test)
    if: ${{ hashFiles('**/Cargo.toml') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Test
        run: cargo test --workspace

###############################################################################
#   5 ----- MERGE BLOCK / COVERAGE GATE
###############################################################################
  quality_gate:
    needs: [ node, python, go, rust ]
    runs-on: ubuntu-latest
    if: always()          # run even if some jobs skipped; fail if any failed
    steps:
      - name: Check upstream status
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: |
          echo "⛔ At least one language job failed – blocking the merge."
          exit 1

###############################################################################
#   6 ----- OPTIONAL CODEQL (quick security scan – add secret only once)
###############################################################################
  codeql:
    if: ${{ github.repository_owner == 'heyzgj' }}   # run only on your fork
    needs: [ node, python, go, rust ]
    runs-on: ubuntu-latest
    steps:
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript,python,go,rust
      - uses: github/codeql-action/analyze@v3
